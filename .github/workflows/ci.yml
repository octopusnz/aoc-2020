name: Build C Project

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  
 headergrab:
  runs-on: ${{ matrix.os }}
  strategy:
    matrix:
      os: [windows-latest]

  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MSBuild (Windows)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v2

    - name: Get SDK Version
      if: runner.os == 'Windows'
      env: 
        GH_TOKEN: ${{ github.token }}
      shell: pwsh
      run: |
        "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        $file1 = “C:\Program Files\Microsoft Visual Studio\2022\Enterprise\SDK\ScopeCppSDK\vc15\SDK\include\ucrt\io.h”
        $file2 = “D:\a\aoc-2020\aoc-2020\docs\io.h”

        $hash1 = Get-FileHash $file1
        $hash2 = Get-FileHash $file2

        if ($hash1.Hash -eq $hash2.Hash) {
        Write-Host "The two files are identical."
        } else {
        Write-Host "An updated io.h file has been found."
        Write-Host "Checking if there is already a pending pull-request to merge this."
        
        gh pr list --state open --json number,title,headRefName
        
        # Sample PR list
        $prList = gh pr list --state open --json number,title,headRefName
        $pullRequests = $prList | ConvertFrom-Json

        # File you want to check
        $TargetFile = "io.h"

        # Loop through each PR
        foreach ($pr in $pullRequests) {
        $prNumber = $pr.number

        # Get list of changed files in the PR
        $changedFiles = gh pr view $prNumber --json files --jq '.files[].path' 2>$null

        if ($changedFiles -match [regex]::Escape($TargetFile)) {
        Write-Host "PR #$prNumber modified $TargetFile"
        $fileWasModified = $true
        } else {
        Write-Host "PR #$prNumber did NOT modify $TargetFile"
        if (-not $fileWasModified) {
        Write-Host “Copying io.h to project folder”
        Copy-Item -Path $file1 -Destination $file
        git push origin io-upgrade
        gh pr create --base master --head io-upgrade --title “io.h upgrade” --body “Created automatically by GitHub Actions. A modified io.h version as part of Microsoft Visual Studio was detected on the most recent push.”
        } 
            }
          }
        }         
    
 build:
  runs-on: ${{ matrix.os }}
  strategy:
   matrix:
     os: [ubuntu-latest, macos-latest, windows-latest]

  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MSBuild (Windows)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v2

    - name: Compile (Linux)
      if: runner.os == 'Linux'
      run: |
        gcc -Wall -Wextra -std=c89 -Ilibs 01/main.c libs/*.c -o main01
        gcc -Wall -Wextra -std=c89 -Ilibs 02/main.c libs/*.c -o main02

    - name: Compile (macOS)
      if: runner.os == 'macOS'
      run: |
        clang -Wall -Wextra -std=c89 -Ilibs 01/main.c libs/*.c -o main01
        clang -Wall -Wextra -std=c89 -Ilibs 02/main.c libs/*.c -o main02

    - name: Compile (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        cl /W4 /TC /Ilibs 01\main.c libs\*.c /Fe:main01.exe
        cl /W4 /TC /Ilibs 02\main.c libs\*.c /Fe:main02.exe
