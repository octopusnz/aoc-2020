name: Build C Project

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  
 headergrab:
  runs-on: ${{ matrix.os }}
  strategy:
    matrix:
      os: [windows-latest]

  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MSBuild (Windows)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v2

    - name: Get SDK Version
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
         Get-Location

 build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MSBuild (Windows)
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v2

      - name: Compile (Linux)
        if: runner.os == 'Linux'
        run: |
          gcc -Wall -Wextra -std=c89 -Ilibs 01/main.c libs/*.c -o main01
          gcc -Wall -Wextra -std=c89 -Ilibs 02/main.c libs/*.c -o main02

      - name: Compile (macOS)
        if: runner.os == 'macOS'
        run: |
          clang -Wall -Wextra -std=c89 -Ilibs 01/main.c libs/*.c -o main01
          clang -Wall -Wextra -std=c89 -Ilibs 02/main.c libs/*.c -o main02

      - name: Compile (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
          cl /W4 /TC /Ilibs 01\main.c libs\*.c /Fe:main01.exe
          cl /W4 /TC /Ilibs 02\main.c libs\*.c /Fe:main02.exe
